name: Quiz Build and Validation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Job de valida√ß√£o b√°sica
  validate:
    name: Validar Arquivos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Verificar arquivos essenciais
        run: |
          echo "üîç Verificando arquivos essenciais..."
          
          # Verificar se os arquivos existem
          if [ ! -f "index.html" ]; then
            echo "‚ùå index.html n√£o encontrado"
            exit 1
          fi
          
          if [ ! -f "styles.css" ]; then
            echo "‚ùå styles.css n√£o encontrado"
            exit 1
          fi
          
          if [ ! -f "script.js" ]; then
            echo "‚ùå script.js n√£o encontrado"
            exit 1
          fi
          
          echo "‚úÖ Todos os arquivos essenciais encontrados"

      - name: Verificar estrutura HTML
        run: |
          echo "üîç Verificando estrutura HTML..."
          
          # Verificar DOCTYPE
          if ! grep -q "<!DOCTYPE html>" index.html; then
            echo "‚ùå DOCTYPE n√£o encontrado"
            exit 1
          fi
          
          # Verificar links para CSS e JS
          if ! grep -q "styles.css" index.html; then
            echo "‚ùå Link para styles.css n√£o encontrado"
            exit 1
          fi
          
          if ! grep -q "script.js" index.html; then
            echo "‚ùå Link para script.js n√£o encontrado"
            exit 1
          fi
          
          echo "‚úÖ Estrutura HTML v√°lida"

      - name: Verificar estrutura JavaScript
        run: |
          echo "‚ö° Verificando estrutura JavaScript..."
          
          # Verificar se tem dados do quiz
          if ! grep -q "quizData" script.js; then
            echo "‚ùå Dados do quiz n√£o encontrados"
            exit 1
          fi
          
          # Verificar se tem fun√ß√µes principais
          if ! grep -q "loadQuestion" script.js; then
            echo "‚ùå Fun√ß√£o loadQuestion n√£o encontrada"
            exit 1
          fi
          
          echo "‚úÖ Estrutura JavaScript v√°lida"

  # Job de build e prepara√ß√£o
  build:
    name: Build e Prepara√ß√£o
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Preparar arquivos
        run: |
          echo "üìÅ Preparando arquivos para distribui√ß√£o..."
          
          # Criar diret√≥rio de distribui√ß√£o
          mkdir -p dist
          
          # Copiar arquivos principais
          cp index.html dist/
          cp styles.css dist/
          cp script.js dist/
          cp README.md dist/
          
          echo "‚úÖ Arquivos copiados para dist/"

      - name: Criar arquivo de informa√ß√µes
        run: |
          echo "üìä Criando arquivo de informa√ß√µes..."
          
          cat > dist/build-info.json << EOF
          {
            "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "workflow": "${{ github.workflow }}",
            "build_number": "${{ github.run_number }}"
          }
          EOF
          
          echo "‚úÖ Arquivo de informa√ß√µes criado"

      - name: Criar arquivo de instru√ß√µes
        run: |
          echo "üìã Criando arquivo de instru√ß√µes..."
          
          cat > dist/COMO-USAR.md << EOF
          # üéØ Quiz de Ci√™ncias da Computa√ß√£o
          
          ## üìÅ Arquivos Inclu√≠dos
          - \`index.html\` - P√°gina principal do quiz
          - \`styles.css\` - Estilos CSS responsivos
          - \`script.js\` - L√≥gica JavaScript
          - \`README.md\` - Documenta√ß√£o completa
          - \`build-info.json\` - Informa√ß√µes do build
          
          ## üöÄ Como Usar
          1. Baixe todos os arquivos desta pasta
          2. Abra \`index.html\` em qualquer navegador
          3. Responda √†s perguntas do quiz
          4. Veja sua pontua√ß√£o final!
          
          ## üéÆ Controles
          - Clique nas op√ß√µes para responder
          - Use as teclas 1-4 para navegar pelas op√ß√µes
          - Pressione Enter para avan√ßar
          - Use "Jogar Novamente" para reiniciar
          
          ## üìä Sobre o Quiz
          - 8 perguntas sobre Ci√™ncias da Computa√ß√£o
          - Interface responsiva para desktop e mobile
          - Sistema de pontua√ß√£o com feedback visual
          - Temas: Programa√ß√£o, Algoritmos, Redes, Estruturas de Dados
          
          **Build:** v${{ github.run_number }}
          **Commit:** ${{ github.sha }}
          **Data:** $(date '+%d/%m/%Y %H:%M')
          EOF
          
          echo "‚úÖ Arquivo de instru√ß√µes criado"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: quiz-ciencias-computacao-v${{ github.run_number }}
          path: dist/
          retention-days: 30

  # Job de notifica√ß√£o
  notify:
    name: Notificar Sucesso
    runs-on: ubuntu-latest
    needs: [validate, build]
    if: always()
    steps:
      - name: Status Final
        run: |
          if [ "${{ needs.validate.result }}" == "success" ] && [ "${{ needs.build.result }}" == "success" ]; then
            echo "üéâ Build conclu√≠do com sucesso!"
            echo "üìÅ Arquivos dispon√≠veis como artifact"
            echo "üì¶ Nome do artifact: quiz-ciencias-computacao-v${{ github.run_number }}"
            echo "üîó Acesse a aba Actions para baixar"
            echo "üìã Instru√ß√µes inclu√≠das no arquivo COMO-USAR.md"
          else
            echo "‚ùå Build falhou"
            echo "üîç Verifique os logs para mais detalhes"
            exit 1
          fi